function test_setConfigurationBasis_RAS(obj)

    % Initialization ======================================================
    obj.showSection('Configuration state basis with RAS (setConfigurationBasis)');

    % Default parameters ==================================================
    x                   =   1:5;
    SOB                 =   rand(8,5);
    Vext                =   QMol_DFT_Vext;
    CI                  =   QMol_CI_conv('display', false,  ...
                                'numberElectron',   4,      ...
                                'xspan',            x,      ...
                                'orbitalBasis',     SOB,    ...
                                'externalPotential',Vext,   ...
                                'type',             'RAS');
    CI.setConfigurationBasis;
    
    % (single & double) excitations
    CSB                 =   unique(sort(CI.configurationBasis,2),'rows');
    CSB_th              =   unique(sort([-1 -2 1 2; -1 -2 1 3; -1 -2 1 4; -1 -2 1 5;   ...
                                         -1 -2 2 3; -1 -2 2 4; -1 -2 2 5;   ...
                                         -1 -2 3 4; -1 -2 3 5;   ...
                                         -1 -2 4 5; ...
                                         -1 -3 1 2; -1 -3 1 3; -1 -3 1 4; -1 -3 1 5;   ...
                                         -1 -3 2 3; -1 -3 2 4; -1 -3 2 5;   ...
                                         -1 -3 3 4; -1 -3 3 5;   ...
                                         -1 -3 4 5; ...
                                         -1 -4 1 2; -1 -4 1 3; -1 -4 1 4; -1 -4 1 5;   ...
                                         -1 -4 2 3; -1 -4 2 4; -1 -4 2 5;   ...
                                         -1 -4 3 4; -1 -4 3 5;   ...
                                         -1 -4 4 5; ...
                                         -1 -5 1 2; -1 -5 1 3; -1 -5 1 4; -1 -5 1 5;   ...
                                         -1 -5 2 3; -1 -5 2 4; -1 -5 2 5;   ...
                                         -1 -5 3 4; -1 -5 3 5;   ...
                                         -1 -5 4 5; ... %
                                         -2 -3 1 2; -2 -3 1 3; -2 -3 1 4; -2 -3 1 5;   ...
                                         -2 -3 2 3; -2 -3 2 4; -2 -3 2 5;   ...
                                         -2 -3 3 4; -2 -3 3 5;   ...
                                         -2 -3 4 5; ...
                                         -2 -4 1 2; -2 -4 1 3; -2 -4 1 4; -2 -4 1 5;   ...
                                         -2 -4 2 3; -2 -4 2 4; -2 -4 2 5;   ...
                                         -2 -4 3 4; -2 -4 3 5;   ...
                                         -2 -4 4 5; ...
                                         -2 -5 1 2; -2 -5 1 3; -2 -5 1 4; -2 -5 1 5;   ...
                                         -2 -5 2 3; -2 -5 2 4; -2 -5 2 5;   ...
                                         -2 -5 3 4; -2 -5 3 5;   ...
                                         -2 -5 4 5; ... %
                                         -3 -4 1 2; -3 -4 1 3; -3 -4 1 4; -3 -4 1 5;   ...
                                         -3 -4 2 3; -3 -4 2 4; -3 -4 2 5;   ...
                                         -3 -4 3 4; -3 -4 3 5;   ...
                                         -3 -4 4 5; ...
                                         -3 -5 1 2; -3 -5 1 3; -3 -5 1 4; -3 -5 1 5;   ...
                                         -3 -5 2 3; -3 -5 2 4; -3 -5 2 5;   ...
                                         -3 -5 3 4; -3 -5 3 5;   ...
                                         -3 -5 4 5; ... %
                                         -4 -5 1 2; -4 -5 1 3; -4 -5 1 4; -4 -5 1 5;   ...
                                         -4 -5 2 3; -4 -5 2 4; -4 -5 2 5;   ...
                                         -4 -5 3 4; -4 -5 3 5;   ...
                                         -4 -5 4 5],2),'rows');
    obj.showResult('configurationBasis (default)', all(size(CSB) == size(CSB_th)) && all(CSB == CSB_th,'all'));

    % User-defined parameters =============================================
    CI.set('reference',[-1 -2 1 2 3],'active',[-1 -2 -3 1 2 3 4]);
    CI.setConfigurationBasis;


    % Number of electrons
    obj.showResult('numberElectron (from reference)',CI.numberElectron == 5);

    % Configuration basis
    CSB                 =   unique(sort(CI.configurationBasis,2),'rows');
    CSB_th              =   unique(sort([-1 -2 1 2 3; -1 -2 1 2 4; -1 -2 1 4 3; -1 -2 4 2 3; ...
                                         -1 -3 1 2 3; -1 -3 1 2 4; -1 -3 1 4 3; -1 -3 4 2 3; ...
                                         -3 -2 1 2 3; -3 -2 1 2 4; -3 -2 1 4 3; -3 -2 4 2 3],2),'rows');
    obj.showResult('configurationBasis (user defined)', all(size(CSB) == size(CSB_th)) && all(CSB == CSB_th,'all'));

    % Freezing orbitals 
    CI.set('frozen',[-1 2]);
    CI.setConfigurationBasis;

    CSB                 =   unique(sort(CI.configurationBasis,2),'rows');
    CSB_th              =   unique(sort([-1 -2 1 2 3; -1 -2 1 2 4; -1 -2 4 2 3; ...
                                         -1 -3 1 2 3; -1 -3 1 2 4; -1 -3 4 2 3],2),'rows');
    obj.showResult('configurationBasis (with frozen)', all(size(CSB) == size(CSB_th)) && all(CSB == CSB_th,'all'));

    % noDouble constraint 
    CI.set('noDouble',3);
    CI.setConfigurationBasis;
    CSB                 =   unique(sort(CI.configurationBasis,2),'rows');
    CSB_th              =   unique(sort([-1 -2 1 2 3; -1 -2 1 2 4; -1 -2 4 2 3; -1 -3 1 2 4],2),'rows');
    obj.showResult('configurationBasis (with noDouble)', all(size(CSB) == size(CSB_th)) && all(CSB == CSB_th,'all'));

    % noEmpty constraint 
    CI.set('noEmpty',3);
    CI.setConfigurationBasis;
    CSB                 =   unique(sort(CI.configurationBasis,2),'rows');
    CSB_th              =   unique(sort([-1 -2 1 2 3; -1 -2 4 2 3; -1 -3 1 2 4],2),'rows');
    obj.showResult('configurationBasis (with noEmpty)', all(size(CSB) == size(CSB_th)) && all(CSB == CSB_th,'all'));

end

